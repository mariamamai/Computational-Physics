import numpy as np
import matplotlib.pyplot as plt

A=np.array([5, 3, 3, 1, 5, 6, 1, 5, 4, 4, 3, 3, 3, 3, 6, 3, 3, 1, 6, 4, 6, 3,
6, 3, 3, 5, 1, 2, 3, 5, 6, 3, 3, 3, 2, 3, 3, 3, 5, 3, 5, 3, 2, 5,
3, 4, 6, 3, 3, 5, 5, 3, 6, 6, 6, 3, 4, 3, 6, 3, 2, 1, 6, 6, 6, 3,
3, 5, 6, 3, 4, 2, 6, 3, 3, 2, 3, 6, 3, 6, 5, 5, 2, 6, 5, 3, 6, 3,
1, 1, 6, 1, 3, 3, 1, 6, 3, 6, 4, 3, 6, 6, 6, 5, 6, 3, 3, 5, 3, 1,
2, 6, 6, 3, 3, 3, 5, 3, 5, 5, 4, 6, 6, 3, 6, 1, 6, 1, 3, 6, 3, 6,
5, 2, 6, 4, 1, 6, 6, 3, 1, 5, 6, 5, 5, 3, 3, 1, 3, 4, 3, 1, 3, 3,
1, 5, 3, 5, 6, 6, 1, 3, 3, 3, 3, 3, 4, 6, 4, 3, 3, 3, 5, 4, 3, 2,
5, 6, 4, 4])




#α ερώτημα

print('\n     Ερώτημα α \n')

N = len(A)
s = A.sum()
mesos = s/N
print(mesos)

#προσεγγίζει το 3.5 που είναι η αναμενόμενη τιμή της ρίψης




#β ερώτημα

print('\n     Ερώτημα β \n')

summ = 0
for i in A:
    summ += (A[i]-mesos)**2
print(summ)
    
s2 = summ/(N-1)
print(s2)




#γ ερώτημα

print('\n     Ερώτημα γ \n')

s2N = summ/N
print(s2N)

#παρατηρώ πως η τετραγωνική διασπορά στο β και η προκατειλημμένη τετραγωνική διασπορά στο γ έχουν πολύ κοντινές τιμές
#αυτό είναι αναμενόμενο καθώς το Ν είναι αρκετά μεγαλύτερο του 1


 
